;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; init midi stuff
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; init MIDI stuff

(define *midi-in* (midi_new_indevice))
(define *midi-out* (midi_new_outdevice))

;; query for valid midi output devices
(midi_query_outports *midi-out*)
(midi_open_outport *midi-out* 0)
;; query for valid midi input
(midi_query_inports *midi-in*)
(midi_open_inport *midi-in* 0)

;; register a *midi-in* to "midi_callback"
(midi_register_device *midi-in* "midi_msg_buffer_receiver")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; print out current midi buffer
(dump_midi_buffer)
;; midi playback
(midi_playback_c (now) *midi-out*)

;; print out current note buffer
(dump_note_buffer)
;; dump all note chunks with gap greater than 5.0 seconds
(dump_chunks_a 5.0)

;; note playback
(note_midi_playback_d (now) *midi-out* 0) ;; play all notes
;; play note chunks 1,2 and 3 separated by 5 seconds
(note_midi_playback_b (now) *midi-out* 0 1 5.0)
(note_midi_playback_b (now) *midi-out* 0 2 5.0)
(note_midi_playback_b (now) *midi-out* 0 3 5.0)

;; reset stuff
(define reset-all
  (lambda ()
    (midi_msg_buffer_reset)
    (note_buffer_reset)))

(reset-all)

;; panic
(panic *midi-out*)
